% Encoding: UTF-8

@Article{Blass1992,
  author       = {Andreas Blass},
  date         = {1992},
  journaltitle = {Annals of Pure and Applied Logic},
  title        = {A game semantics for linear logic},
  doi          = {10.1016/0168-0072(92)90073-9},
  issn         = {0168-0072},
  number       = {1},
  pages        = {183--220},
  url          = {https://www.sciencedirect.com/science/article/pii/0168007292900739},
  volume       = {56},
  abstract     = {We present a game (or dialogue) semantics in the style of Lorenzen (1959) for Girard's linear logic (1987). Lorenzen suggested that the (constructive) meaning of a proposition ? should be specified by telling how to conduct a debate between a proponent P who asserts ? and an opponent O who denies ?. Thus propositions are interpreted as games, connectives (almost) as operations on games, and validity as existence of a winning strategy for P. (The qualifier _almost_ will be discussed later when more details have been presented.) We propose that the connectives of linear logic can be naturally interpreted as the operations on games introduced for entirely different purposes by Blass (1972). We show that affine logic, i.e., linear logic plus the rule of weakening, is sound for this interpretation. We also obtain a completeness theorem for the additive fragment of affine logic, but we show that completeness fails for the multiplicative fragment. On the other hand, for the multiplicative fragment, we obtain a simple characterization of game-semantical validity in terms of classical tautologies. An analysis of the failure of completeness for the multiplicative fragment leads to the conclusion that the game interpretation of the connective ? is weaker than the interpretation implicit in Girard's proof rules; we discuss the differences between the two interpretations and their relative advantages and disadvantages. Finally, we discuss how G_del's Dialectica interpretation (1958), which was connected to linear logic by de Paiva (1989), fits with game semantics.},
}

@PhdThesis{Gross2021thesis,
  author               = {Jason S. Gross},
  date                 = {2021-02},
  institution          = {Massachusetts Institute of Technology},
  title                = {Performance Engineering of Proof-Based Software Systems at Scale},
  type                 = {{PhD} Thesis},
  url                  = {https://jasongross.github.io/papers/2021-JGross-PhD-EECS-Feb2021.pdf},
  abstract             = {Formal verification is increasingly valuable as our world comes to rely more on software for critical infrastructure. A significant and understudied cost of developing mechanized proofs, especially at scale, is the computer performance of proof generation. This dissertation aims to be a partial guide to identifying and resolving performance bottlenecks in dependently typed tactic-driven proof assistants like Coq.

We present a survey of the landscape of performance issues in Coq, with micro- and macro-benchmarks. We describe various metrics that allow prediction of performance, such as term size, goal size, and number of binders, and note the occasional surprising lack of a bottleneck for some factors, such as total proof term size. To our knowledge such a roadmap to performance bottlenecks is a new contribution of this dissertation.

The central new technical contribution presented by this dissertation is a reflective framework for partial evaluation and rewriting, already used to compile a code generator for field-arithmetic cryptographic primitives which generates code currently used in Google Chrome. We believe this prototype is the first scalably performant realization of an approach for code specialization which does not require adding to the trusted code base. Our extensible engine, which combines the traditional concepts of tailored term reduction and automatic rewriting from hint databases with on-the-fly generation of inductive codes for constants, is also of interest to replace these ingredients in proof assistants' proof checkers and tactic engines. Additionally, we use the development of this framework itself as a case study for the various performance issues that can arise when designing large proof libraries. We also present a novel method of simple and fast reification, developed and published during this PhD.

Finally, we present additional lessons drawn from the case studies of a category-theory library, a proof-producing parser generator, and cryptographic code generation.},
  dspace-url           = {https://dspace.mit.edu/handle/1721.1/130763},
  presentation-pdf     = {https://jasongross.github.io/presentations/phd-defense-2020/jgross-defense.pdf},
  presentation-pptx    = {https://jasongross.github.io/presentations/phd-defense-2020/jgross-defense.pptx},
  presentation-youtube = {https://youtu.be/K0_zr2UC_YE},
}

@Article{Abramsky2013,
  author       = {Samson Abramsky and Radha Jagadeesan},
  date         = {2013},
  journaltitle = {CoRR},
  title        = {Games and Full Completeness for Multiplicative Linear Logic},
  eprint       = {1311.6057},
  eprinttype   = {arxiv},
  volume       = {abs/1311.6057},
  abstract     = {We present a game semantics for Linear Logic, in which formulas denote games and proofs denote winning strategies. We show that our semantics yields a categorical model of Linear Logic and prove full completeness for Multiplicative Linear Logic with the MIX rule: every winning strategy is the denotation of a unique cut-free proof net. A key role is played by the notion of \em history-free strategy; strong connections are made between history-free strategies and the Geometry of Interaction. Our semantics incorporates a natural notion of polarity, leading to a refined treatment of the additives. We make comparisons with related work by Joyal, Blass et al.},
  bibsource    = {dblp computer science bibliography, https://dblp.org},
  biburl       = {https://dblp.org/rec/journals/corr/AbramskyJ13.bib},
  timestamp    = {Mon, 13 Aug 2018 16:48:36 +0200},
}

@Article{gonthier2008formal,
  author       = {Gonthier, Georges},
  title        = {Formal Proof--The Four-Color Theorem},
  number       = {11},
  pages        = {1382--1393},
  volume       = {55},
  date         = {2008},
  journaltitle = {Notices of the AMS},
  url          = {https://www.ams.org/notices/200811/tx081101382p.pdf},
}

@Misc{gonthier2005computer,
  author = {Gonthier, Georges},
  title  = {A computer-checked proof of the Four Colour Theorem},
  date   = {2005},
  url    = {https://audentia-gestion.fr/MICROSOFT/4colproof.pdf},
}

@InProceedings{category-coq-experience,
  author                      = {Jason Gross and Adam Chlipala and David I. Spivak},
  booktitle                   = {Proceedings of the \href{http://www.cs.uwyo.edu/~ruben/itp-2014}{5th International Conference on Interactive Theorem Proving (ITP'14)}},
  date                        = {2014-07},
  title                       = {Experience Implementing a Performant Category-Theory Library in {C}oq},
  doi                         = {10.1007/978-3-319-08970-6_18},
  editor                      = {Gerwin Klein and Ruben Gamboa},
  eprint                      = {1401.7694},
  isbn                        = {978-3-319-08970-6},
  location                    = {Cham},
  pages                       = {275--291},
  publisher                   = {Springer International Publishing},
  url                         = {https://jasongross.github.io/papers/category-coq-experience-itp-submission-final.pdf},
  abstract                    = {We describe our experience implementing a broad category-theory library in Coq. Category theory and computational performance are not usually mentioned in the same breath, but we have needed substantial engineering effort to teach Coq to cope with large categorical constructions without slowing proof script processing unacceptably. In this paper, we share the lessons we have learned about how to represent very abstract mathematical objects and arguments in Coq and how future proof assistants might be designed to better support such reasoning. One particular encoding trick to which we draw attention allows category-theoretic arguments involving \emph{duality} to be internalized in Coq's logic with definitional equality. Ours may be the largest Coq development to date that uses the relatively new Coq version developed by homotopy type theorists, and we reflect on which new features were especially helpful.},
  arxiv-url                   = {https://arxiv.org/abs/1401.7694},
  full-bibliography           = {https://jasongross.github.io/papers/category-coq-experience.html},
  original-url                = {https://jasongross.github.io/papers/category-coq-experience-itp-submission.pdf},
  owner                       = {Jason},
  presentation-annotated-pptx = {https://jasongross.github.io/presentations/itp-2014/category-coq-experience.pptx},
  presentation-pdf            = {https://jasongross.github.io/presentations/itp-2014/category-coq-experience.pdf},
  published-url-springer      = {http://link.springer.com/chapter/10.1007/978-3-319-08970-6_18},
  reviews                     = {https://jasongross.github.io/papers/category-coq-experience-itp-2014-reviews.txt},
  timestamp                   = {2014.01.19},
}

@Software{coq,
  author    = {The {Coq Development Team}},
  date      = {2021-01},
  title     = {The {C}oq Proof Assistant},
  doi       = {10.5281/zenodo.4501022},
  version   = {8.13},
  publisher = {Zenodo},
}

@InProceedings{Gonthier2013,
  author      = {Gonthier, Georges and Asperti, Andrea and Avigad, Jeremy and Bertot, Yves and Cohen, Cyril and Garillot, François and Le Roux, Stéphane and Mahboubi, Assia and O'Connor, Russell and Ould Biha, Sidi and Pasca, Ioana and Rideau, Laurence and Solovyev, Alexey and Tassi, Enrico and Théry, Laurent},
  booktitle   = {{ITP} 2013, 4th Conference on Interactive Theorem Proving},
  date        = {2013-07},
  title       = {A Machine-Checked Proof of the Odd Order Theorem},
  doi         = {10.1007/978-3-642-39634-2\_14},
  editor      = {Sandrine Blazy and Christine Paulin and David Pichardie},
  location    = {Rennes, France},
  pages       = {163--179},
  publisher   = {Springer},
  series      = {LNCS},
  url         = {https://hal.inria.fr/hal-00816699},
  volume      = {7998},
  hal_id      = {hal-00816699},
  hal_version = {v1},
  pdf         = {https://hal.inria.fr/hal-00816699/file/main.pdf},
}

@Misc{hales2015formal,
  author      = {Thomas Hales and Mark Adams and Gertrud Bauer and Dat Tat Dang and John Harrison and Truong Le Hoang and Cezary Kaliszyk and Victor Magron and Sean McLaughlin and Thang Tat Nguyen and Truong Quang Nguyen and Tobias Nipkow and Steven Obua and Joseph Pleso and Jason Rute and Alexey Solovyev and An Hoai Thi Ta and Trung Nam Tran and Diep Thi Trieu and Josef Urban and Ky Khac Vu and Roland Zumkeller},
  title       = {A formal proof of the {K}epler conjecture},
  date        = {2015},
  eprint      = {1501.02155},
  eprintclass = {math.MG},
  eprinttype  = {arXiv},
}

@Article{Xavier2018,
  author       = {Bruno Xavier and Carlos Olarte and Giselle Reis and Vivek Nigam},
  title        = {Mechanizing Focused Linear Logic in {C}oq},
  issn         = {1571-0661},
  note         = {The 12th Workshop on Logical and Semantic Frameworks, with Applications (LSFA 2017)},
  pages        = {219--236},
  volume       = {338},
  abstract     = {Linear logic has been used as a foundation (and inspiration) for the development of programming languages, logical frameworks and models for concurrency. Linear logic's cut-elimination and the completeness of focusing are two of its fundamental properties that have been exploited in such applications. Cut-elimination guarantees that linear logic is consistent and has the so-called sub-formula property. Focusing is a discipline for proof search that was introduced to reduce the search space, but has proved to have more value, as it allows one to specify the shapes of proofs available. This paper formalizes first-order linear logic in Coq and mechanizes the proof of cut-elimination and the completeness of focusing. Moreover, the implemented logic is used to encode an object logic, such as in a linear logical framework, and prove adequacy.},
  date         = {2018},
  doi          = {10.1016/j.entcs.2018.10.014},
  journaltitle = {Electronic Notes in Theoretical Computer Science},
  keywords     = {linear logic, focusing, Coq},
  url          = {https://www.sciencedirect.com/science/article/pii/S157106611830080X},
}

@InProceedings{Bauer:2017:HLF:3018610.3018615,
  author            = {Bauer, Andrej and Gross, Jason and Lumsdaine, Peter LeFanu and Shulman, Michael and Sozeau, Matthieu and Spitters, Bas},
  booktitle         = {Proceedings of the \href{http://cpp2017.mpi-sws.org/}{6th ACM SIGPLAN Conference on Certified Programs and Proofs}},
  date              = {2017-01},
  title             = {The {HoTT} Library: A Formalization of Homotopy Type Theory in {C}oq},
  doi               = {10.1145/3018610.3018615},
  eprint            = {1610.04591},
  isbn              = {978-1-4503-4705-1},
  location          = {Paris, France},
  pages             = {164--172},
  publisher         = {ACM},
  series            = {CPP 2017},
  url               = {https://jasongross.github.io/papers/2017-HoTT-formalization.pdf},
  abstract          = {We report on the development of the \emph{{HoTT} library}, a formalization of homotopy type theory in the {Coq} proof assistant. It formalizes most of basic homotopy type theory, including univalence, higher inductive types, and significant amounts of synthetic homotopy theory, as well as category theory and modalities. The library has been used as a basis for several independent developments. We discuss the decisions that led to the design of the library, and we comment on the interaction of homotopy type theory with recently introduced features of {Coq}, such as universe polymorphism and private inductive types.},
  acm-authorize-url = {https://dl.acm.org/doi/10.1145/3018610.3018615?cid=99658666674},
  acmid             = {3018615},
  address           = {New York, NY, USA},
  keywords          = {Coq, Higher inductive types, Homotopy type theory, Univalent foundations, Universe polymorphism},
  numpages          = {9},
  oai2identifier    = {1610.04591},
}


@Misc{OPLSSLinearLogic,
  author = {Edward Z. Yang and Frank Pfenning},
  title  = {Unofficial Lecture Notes on Linear Logic and Session-based Concurrency at OPLSS},
  date   = {2013-07},
  url    = {https://www.cs.uoregon.edu/research/summerschool/summer13/lectures/pfenning-2.pdf},
}

@Article{AlphaGo,
  author       = {Silver, David and Huang, Aja and Maddison, Chris J. and Guez, Arthur and Sifre, Laurent and van den Driessche, George and Schrittwieser, Julian and Antonoglou, Ioannis and Panneershelvam, Veda and Lanctot, Marc and Dieleman, Sander and Grewe, Dominik and Nham, John and Kalchbrenner, Nal and Sutskever, Ilya and Lillicrap, Timothy and Leach, Madeleine and Kavukcuoglu, Koray and Graepel, Thore and Hassabis, Demis},
  title        = {Mastering the Game of {Go} with Deep Neural Networks and Tree Search},
  issn         = {0028-0836},
  number       = {7587},
  pages        = {484--489},
  volume       = {529},
  abstract     = {The game of Go has long been viewed as the most challenging of classic games for artificial intelligence owing to its enormous search space and the difficulty of evaluating board positions and moves. Here we introduce a new approach to computer Go that uses 'value networks' to evaluate board positions and 'policy networks' to select moves. These deep neural networks are trained by a novel combination of supervised learning from human expert games, and reinforcement learning from games of self-play. Without any lookahead search, the neural networks play Go at the level of state-of-the-art Monte Carlo tree search programs that simulate thousands of random games of self-play. We also introduce a new search algorithm that combines Monte Carlo simulation with value and policy networks. Using this search algorithm, our program AlphaGo achieved a 99.8 percent winning rate against other Go programs, and defeated the human European Go champion by 5 games to 0. This is the first time that a computer program has defeated a human professional player in the full-sized game of Go, a feat previously thought to be at least a decade away.},
  added-at     = {2016-05-21T09:09:48.000+0200},
  biburl       = {https://www.bibsonomy.org/bibtex/29e987f58d895c490144693139cbc90c7/flint63},
  date         = {2016-01},
  doi          = {10.1038/nature16961},
  file         = {Nature online:2016/SilverHuangEtAl16nature.pdf:PDF},
  groups       = {public},
  interhash    = {48430c7891aaf9fe2582faa8f5d076c1},
  intrahash    = {9e987f58d895c490144693139cbc90c7},
  journaltitle = {Nature},
  keywords     = {01614 paper ai google learn algorithm},
  timestamp    = {2018-04-16T12:03:12.000+0200},
  username     = {flint63},
}

@Misc{alphastarblog,
  author = {Vinyals, Oriol and Babuschkin, Igor and Chung, Junyoung and Mathieu, Michael and Jaderberg, Max and Czarnecki, Wojtek and Dudzik, Andrew and Huang, Aja and Georgiev, Petko and Powell, Richard and Ewalds, Timo and Horgan, Dan and Kroiss, Manuel and Danihelka, Ivo and Agapiou, John and Oh, Junhyuk and Dalibard, Valentin and Choi, David and Sifre, Laurent and Sulsky, Yury and Vezhnevets, Sasha and Molloy, James and Cai, Trevor and Budden, David and Paine, Tom and Gulcehre, Caglar and Wang, Ziyu and Pfaff, Tobias and Pohlen, Toby and Yogatama, Dani and Cohen, Julia and McKinney, Katrina and Smith, Oliver and Schaul, Tom and Lillicrap, Timothy and Apps, Chris and Kavukcuoglu, Koray and Hassabis, Demis and Silver, David},
  title  = {Alpha{S}tar: Mastering the Real-Time Strategy Game {StarCraft II}},
  date   = {2019},
  url    = {https://deepmind.com/blog/alphastar-mastering-real-time-strategy-game-starcraft-ii/},
}

@Article{DBLP:journals/corr/LoosISK17,
  author       = {Sarah M. Loos and Geoffrey Irving and Christian Szegedy and Cezary Kaliszyk},
  date         = {2017},
  journaltitle = {CoRR},
  title        = {Deep Network Guided Proof Search},
  eprint       = {1701.06972},
  eprinttype   = {arxiv},
  volume       = {abs/1701.06972},
  bibsource    = {dblp computer science bibliography, https://dblp.org},
  biburl       = {https://dblp.org/rec/journals/corr/LoosISK17.bib},
  timestamp    = {Mon, 13 Aug 2018 16:46:16 +0200},
}

@Article{DBLP:journals/corr/abs-1805-07563,
  author       = {Cezary Kaliszyk and Josef Urban and Henryk Michalewski and Mirek OlsÃ¡k},
  date         = {2018},
  journaltitle = {CoRR},
  title        = {Reinforcement Learning of Theorem Proving},
  eprint       = {1805.07563},
  eprinttype   = {arxiv},
  volume       = {abs/1805.07563},
  bibsource    = {dblp computer science bibliography, https://dblp.org},
  biburl       = {https://dblp.org/rec/journals/corr/abs-1805-07563.bib},
  timestamp    = {Mon, 13 Aug 2018 16:48:41 +0200},
}

@Online{Knies2012,
  author       = {Rob Knies},
  date         = {2012-10-12},
  title        = {Six-year journey leads to proof of {F}eit-{T}hompson Theorem},
  url          = {https://phys.org/news/2012-10-six-year-journey-proof-feit-thompson-theorem.html},
  organization = {Microsoft},
}

@Comment{jabref-meta: databaseType:biblatex;}
